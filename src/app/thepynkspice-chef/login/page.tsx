'use client';
import { useState, useEffect } from 'react';
import { useRouter } from 'next/navigation';
export default function AdminLoginPage(){ const router=useRouter(); const [sending,setSending]=useState(false); const [verifying,setVerifying]=useState(false); const [code,setCode]=useState(''); const [message,setMessage]=useState<string|null>(null); const [error,setError]=useState<string|null>(null); useEffect(()=>{(async()=>{try{const r=await fetch('/api/admin/menu-items'); if(r.ok) router.replace('/thepynkspice-chef');}catch{}})();},[router]); async function requestCode(){ setSending(true); setError(null); setMessage(null); const res=await fetch('/api/admin/auth/request',{method:'POST'}); if(!res.ok) setError('Failed to send code'); else setMessage('Code sent to Telegram admin chat.'); setSending(false);} async function verifyCode(e:React.FormEvent){ e.preventDefault(); setVerifying(true); setError(null); setMessage(null); const res=await fetch('/api/admin/auth/verify',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({code})}); const data=await res.json(); if(!data.ok){ setError(data.error||'Invalid code'); setVerifying(false); return;} router.replace('/thepynkspice-chef'); } return <div className="max-w-md mx-auto p-8 space-y-6"><header className="space-y-2"><h1 className="text-3xl font-bold">Chef Login</h1><p className="text-gray-600 text-sm">Request a one-time 6‑character code sent via Telegram.</p></header><div className="space-y-4 bg-white p-6 rounded-xl border border-gray-100 shadow-sm"><div className="space-y-2"><button onClick={requestCode} disabled={sending} className="w-full rounded-lg bg-pink-600 text-white font-medium py-2.5 disabled:opacity-50">{sending?'Sending…':'Send Code'}</button>{message && <p className="text-sm text-green-600">{message}</p>}</div><form onSubmit={verifyCode} className="space-y-4"><div><label htmlFor="code" className="block text-sm font-medium text-gray-700 mb-1">Login Code</label><input id="code" autoComplete="one-time-code" inputMode="text" pattern="[A-Z0-9]{6}" maxLength={6} value={code} onChange={e=>setCode(e.target.value.toUpperCase())} placeholder="ABC123" className="w-full p-2.5 border rounded-lg focus:outline-none focus:ring-2 focus:ring-pink-600 tracking-widest text-center font-mono" required /><p className="text-xs text-gray-500 mt-1">Enter the 6 characters exactly as received.</p></div><button type="submit" disabled={verifying || code.length!==6} className="w-full rounded-lg bg-green-600 text-white font-semibold py-2.5 disabled:opacity-50">{verifying?'Verifying…':'Login'}</button>{error && <p className="text-sm text-red-600">{error}</p>}</form></div></div>; }